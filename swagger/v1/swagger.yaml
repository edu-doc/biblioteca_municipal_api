---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/bibliotecarios":
    post:
      summary: Create bibliotecario
      tags:
      - Api::V1::Bibliotecarios
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do administrador
        schema:
          type: string
      responses:
        '201':
          description: bibliotecario created
        '422':
          description: create bibliotecario error
        '401':
          description: unauthenticated
        '403':
          description: forbidden (not admin)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bibliotecario:
                  type: object
                  properties:
                    email:
                      type: string
                    senha_provisoria:
                      type: string
                    nome:
                      type: string
  "/api/v1/bibliotecarios/{id}":
    parameters:
    - name: Authorization
      in: header
      description: Token de autenticação
      required: false
      schema:
        type: string
    get:
      summary: Get bibliotecario
      tags:
      - Api::V1::Bibliotecarios
      parameters:
      - name: id
        in: path
        description: id for bibliotecario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: bibliotecario found
        '404':
          description: bibliotecario not found
    delete:
      summary: Delete bibliotecario
      tags:
      - Api::V1::Bibliotecarios
      parameters:
      - name: id
        in: path
        description: id for bibliotecario
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Token de autenticação do administrador
        schema:
          type: string
      responses:
        '204':
          description: bibliotecario deleted
        '404':
          description: bibliotecario not found
    put:
      summary: Update bibliotecario
      tags:
      - Api::V1::Bibliotecarios
      parameters:
      - name: id
        in: path
        description: id for bibliotecario
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Token de autenticação
        schema:
          type: string
      responses:
        '200':
          description: self-update
        '404':
          description: bibliotecario not found
        '422':
          description: update bibliotecario error
        '403':
          description: forbidden (not admin)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bibliotecario:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    nome:
                      type: string
  "/api/v1/categorias":
    post:
      summary: Create categoria
      tags:
      - Api::V1::Categorias
      parameters: []
      responses:
        '201':
          description: categoria created
        '422':
          description: create categoria error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoria:
                  type: object
                  properties:
                    nome:
                      type: string
    get:
      summary: Get categorias
      tags:
      - Api::V1::Categorias
      responses:
        '200':
          description: categorias found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nome:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
  "/api/v1/categorias/{id}":
    get:
      summary: Get categoria
      tags:
      - Api::V1::Categorias
      parameters:
      - name: id
        in: path
        description: id for categoria
        required: true
        schema:
          type: string
      responses:
        '200':
          description: categoria found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
        '404':
          description: categoria not found
    delete:
      summary: Delete categoria
      tags:
      - Api::V1::Categorias
      parameters:
      - name: id
        in: path
        description: id for categoria
        required: true
        schema:
          type: string
      responses:
        '204':
          description: categoria deleted
        '404':
          description: categoria not found
    put:
      summary: Update categoria
      tags:
      - Api::V1::Categorias
      parameters:
      - name: id
        in: path
        description: id for categoria
        required: true
        schema:
          type: string
      responses:
        '200':
          description: categoria updated
        '404':
          description: categoria not found
        '422':
          description: update categoria error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                categoria:
                  type: object
                  properties:
                    nome:
                      type: string
  "/api/v1/emprestimos":
    post:
      summary: Create emprestimo
      tags:
      - Api::V1::Emprestimos
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do bibliotecário
        schema:
          type: string
      responses:
        '201':
          description: emprestimo created
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emprestimo:
                  type: object
                  properties:
                    livro_id:
                      type: integer
                    usuario_id:
                      type: integer
                    senha:
                      type: string
                  required:
                  - livro_id
                  - usuario_id
                  - senha
    get:
      summary: Get emprestimos
      tags:
      - Api::V1::Emprestimos
      responses:
        '200':
          description: emprestimos found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    livro_id:
                      type: integer
                    usuario_id:
                      type: integer
                    bibliotecario_id:
                      type: integer
                    data_emprestimo:
                      type: string
                      format: date-time
                    data_limite_devolucao:
                      type: string
                      format: date-time
                    data_devolucao:
                      type: string
                      format: date-time
                      nullable: true
  "/api/v1/emprestimos/renovar":
    post:
      summary: Renovação Online (Usuário)
      tags:
      - Api::V1::Emprestimos
      parameters: []
      responses:
        '200':
          description: renovação registrada com sucesso
        '401':
          description: Senha de empréstimo inválida
        '404':
          description: Empréstimo ativo para este livro não encontrado
        '422':
          description: Limite de renovação atingido
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emprestimo:
                  type: object
                  properties:
                    livro_id:
                      type: integer
                      description: ID do livro a ser renovado
                    senha:
                      type: string
                      description: Senha de empréstimo do usuário
                  required:
                  - livro_id
                  - senha
  "/api/v1/emprestimos/{id}":
    get:
      summary: Get emprestimo
      tags:
      - Api::V1::Emprestimos
      parameters:
      - name: id
        in: path
        description: id for emprestimo
        required: true
        schema:
          type: string
      responses:
        '200':
          description: emprestimo found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  livro_id:
                    type: integer
                  usuario_id:
                    type: integer
                  bibliotecario_id:
                    type: integer
                  data_emprestimo:
                    type: string
                    format: date-time
                  data_limite_devolucao:
                    type: string
                    format: date-time
                  data_devolucao:
                    type: string
                    format: date-time
                    nullable: true
        '404':
          description: emprestimo not found
    delete:
      summary: Delete emprestimo
      tags:
      - Api::V1::Emprestimos
      parameters:
      - name: id
        in: path
        description: id for emprestimo
        required: true
        schema:
          type: string
      responses:
        '204':
          description: emprestimo deleted
        '404':
          description: emprestimo not found
    put:
      summary: Registrar Devolução de um Empréstimo
      tags:
      - Api::V1::Emprestimos
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do bibliotecário
        schema:
          type: string
      - name: id
        in: path
        description: ID do empréstimo a ser devolvido
        required: true
        schema:
          type: string
      responses:
        '200':
          description: devolução registrada com sucesso
        '404':
          description: empréstimo não encontrado
  "/api/v1/livros":
    post:
      summary: Create livro
      tags:
      - Api::V1::Livros
      parameters: []
      responses:
        '201':
          description: livro created
        '422':
          description: create livro error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                livro:
                  type: object
                  properties:
                    titulo:
                      type: string
                    autor:
                      type: string
                    status:
                      type: string
                      enum:
                      - disponivel
                      - emprestado
                    observacoes:
                      type: string
                    categoria_id:
                      type: integer
    get:
      summary: Get livros
      tags:
      - Api::V1::Livros
      responses:
        '200':
          description: livros found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    titulo:
                      type: string
                    autor:
                      type: string
                    status:
                      type: string
                      enum:
                      - disponivel
                      - emprestado
                    observacoes:
                      type: string
                    categoria_id:
                      type: integer
  "/api/v1/livros/{id}":
    get:
      summary: Get livro
      tags:
      - Api::V1::Livros
      parameters:
      - name: id
        in: path
        description: id for livro
        required: true
        schema:
          type: string
      responses:
        '200':
          description: livro found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  titulo:
                    type: string
                  autor:
                    type: string
                  status:
                    type: string
                    enum:
                    - disponivel
                    - emprestado
                  observacoes:
                    type: string
                  categoria_id:
                    type: integer
        '404':
          description: livro not found
    delete:
      summary: Delete livro
      tags:
      - Api::V1::Livros
      parameters:
      - name: id
        in: path
        description: id for livro
        required: true
        schema:
          type: string
      responses:
        '204':
          description: livro deleted
        '404':
          description: livro not found
    put:
      summary: Update livro
      tags:
      - Api::V1::Livros
      parameters:
      - name: id
        in: path
        description: id for livro
        required: true
        schema:
          type: string
      responses:
        '200':
          description: livro updated
        '404':
          description: livro not found
        '422':
          description: update livro error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                livro:
                  type: object
                  properties:
                    titulo:
                      type: string
                    autor:
                      type: string
                    status:
                      type: string
                      enum:
                      - disponivel
                      - emprestado
                    observacoes:
                      type: string
                    categoria_id:
                      type: integer
  "/api/v1/multas":
    get:
      summary: List multas
      tags:
      - Api::V1::Multas
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação
        schema:
          type: string
      responses:
        '200':
          description: multas found
        '401':
          description: unauthorized
  "/api/v1/multas/{id}":
    get:
      summary: Get multa
      tags:
      - Api::V1::Multas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: multa found
        '404':
          description: multa not found
    put:
      summary: Update multa
      tags:
      - Api::V1::Multas
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: multa updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                multa:
                  type: object
                  properties:
                    status:
                      type: string
                      enum:
                      - pago
  "/api/v1/sessions":
    post:
      summary: Login
      tags:
      - Api::V1::Sessions
      parameters: []
      responses:
        '200':
          description: Successful Login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  primeiro_acesso:
                    type: boolean
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
    delete:
      summary: Logout
      tags:
      - Api::V1::Sessions
      parameters: []
      responses:
        '204':
          description: Successful Logout
        '404':
          description: Token not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  "/api/v1/usuarios":
    post:
      summary: Create usuario
      tags:
      - Api::V1::Usuarios
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do bibliotecário
        schema:
          type: string
      responses:
        '201':
          description: usuario created
        '422':
          description: create usuario error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: object
                  properties:
                    nome:
                      type: string
                    cpf:
                      type: string
                    telefone:
                      type: string
                    email:
                      type: string
  "/api/v1/usuarios/{id}":
    get:
      summary: Get usuario
      tags:
      - Api::V1::Usuarios
      parameters:
      - name: id
        in: path
        description: id for usuario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: usuario found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nome:
                    type: string
                  cpf:
                    type: string
                  telefone:
                    type: string
                  email:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '404':
          description: usuario not found
    delete:
      summary: Delete usuario
      tags:
      - Api::V1::Usuarios
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do bibliotecário
        schema:
          type: string
      - name: id
        in: path
        description: id for usuario
        required: true
        schema:
          type: string
      responses:
        '204':
          description: usuario deleted
        '404':
          description: usuario not found
    put:
      summary: Update usuario
      tags:
      - Api::V1::Usuarios
      parameters:
      - name: Authorization
        in: header
        description: Token de autenticação do bibliotecário
        schema:
          type: string
      - name: id
        in: path
        description: id for usuario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: usuario updated
        '404':
          description: usuario not found
        '422':
          description: update usuario error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: object
                  properties:
                    nome:
                      type: string
                    cpf:
                      type: string
                    telefone:
                      type: string
                    email:
                      type: string
  "/api/v1/usuarios/{id}/emprestimos":
    get:
      summary: Get histórico de empréstimos do usuário
      tags:
      - Api::V1::Usuarios
      parameters:
      - name: id
        in: path
        description: id for usuario
        required: true
        schema:
          type: string
      responses:
        '200':
          description: histórico de empréstimos encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    livro_id:
                      type: integer
                    usuario_id:
                      type: integer
                    bibliotecario_id:
                      type: integer
                    data_emprestimo:
                      type: string
                      format: date-time
                    data_limite_devolucao:
                      type: string
                      format: date-time
                    data_devolucao:
                      type: string
                      format: date-time
                      nullable: true
        '404':
          description: usuario not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
